"'Loading Screen' As screen":
    Fill: =varTheme.brandColor
    OnVisible: |+
        =
        

    conScreenPlaceholderContent As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height - 100
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width * 0.9
        X: =Parent.Width/2 - Self.Width/2
        Y: =30
        ZIndex: =1

        conUserNamePlaceholder As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =100
            LayoutMinHeight: =112
            LayoutMinWidth: =250
            ZIndex: =1

            lblUserNameValue_1 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Font: =varTheme.font
                FontWeight: =FontWeight.Semibold
                Height: =53
                Size: =21
                Text: =User().FullName
                Width: =560
                X: =Parent.Width/2 - Self.Width/2
                Y: =lblUserName_1.Height
                ZIndex: =1

            lblUserName_1 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Font: =varTheme.font
                Height: =47
                Size: =21
                Text: =varLabels.StartScreen_User
                Width: =560
                X: =Parent.Width/2 - Self.Width/2
                ZIndex: =2

        imgStartLogoPlaceholder As image:
            Height: =200
            Image: ='warehouse helper logo'
            LayoutMinHeight: =320
            LayoutMinWidth: =320
            Width: =Self.Height
            X: =Parent.Width/2 - Self.Width/2
            Y: =80
            ZIndex: =2

        imgLogoTextPlaceholder As image:
            Image: ='Warehouse Helper_logotype_x2'
            LayoutMinHeight: =320
            LayoutMinWidth: =320
            Transparency: =100
            Width: =320
            ZIndex: =3

        conLocationSelectorPlaceholder As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =conLocationSelectorControl_1.Height + recLocationTopDivider_1.Height * 2
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =112
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Width: =Parent.Width
            ZIndex: =4

            recLocationTopDivider_1 As rectangle:
                Fill: =RGBA(255, 255, 255, 0.5)
                Height: =2
                Width: =Parent.Width
                ZIndex: =1

            conLocationSelectorControl_1 As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                FillPortions: =0
                Height: =120 
                LayoutMinHeight: =112
                LayoutMinWidth: =250
                ZIndex: =3

                Rectangle1 As rectangle:
                    Height: =1
                    Visible: =false
                    Width: =1
                    ZIndex: =1

            recLocationBottomDivider_1 As rectangle:
                Fill: =RGBA(255, 255, 255, 0.5)
                Height: =2
                Width: =Parent.Width
                Y: =60
                ZIndex: =4

        btnScanItemPlaceholder As button:
            BorderThickness: =0
            Color: =varTheme.brandColor
            DisabledColor: =varTheme.brandColor
            DisabledFill: =varTheme.secondaryColor
            DisplayMode: =DisplayMode.Disabled
            Fill: =varTheme.secondaryColor
            Font: =varTheme.font
            Height: =220
            LayoutMinHeight: =70
            LayoutMinWidth: =280
            OnSelect: |-
                =Navigate('Item Screen', ScreenTransition.Fade, {ctxStartScan: true});
            RadiusBottomLeft: =Self.Width / 2
            RadiusBottomRight: =Self.Width / 2
            RadiusTopLeft: =Self.Width / 2
            RadiusTopRight: =Self.Width / 2
            Size: =24
            TabIndex: =0   
            Text: =varLabels.StartScreen_Scan
            Width: =220
            X: =Parent.Width/2 - Self.Width/2
            Y: =Parent.Height - Self.Height - 20
            ZIndex: =5

    imgOpenInfoPagePlaceholder As image:
        AccessibleLabel: =Self.Tooltip
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledFill: =RGBA(0, 0, 0, 0)
        DisplayMode: =DisplayMode.Disabled
        Image: ='info page white icon'
        OnSelect: =Navigate('Info Screen', ScreenTransition.Cover)
        PaddingBottom: =20
        PaddingLeft: =20
        PaddingRight: =20
        PaddingTop: =20
        TabIndex: =0
        X: =Parent.Width - Self.Width - 20
        ZIndex: =2

    timeStartLoading As timer:
        AutoStart: =true
        BorderThickness: =0
        Duration: =1000
        Fill: =RGBA(24, 108, 203, 30%)
        Height: =Parent.Height
        HoverFill: =Color.Transparent
        OnSelect: |-
            =// Load Data
            Concurrent(
                Set(varWarehouses, 
                    ShowColumns(
                                Filter('warehouses (businessCentralDemos/warehouseHelper/beta)', useAsInTransit = false),
                                 "id", "code", "displayName", "useAsInTransit", "city"
                            )
                 ),
                Set(varCompanyInformation, First('localeInformation (businessCentralDemos/warehouseHelper/beta)'));
            );
            
            Set(varSelectedWarehouse, First(varWarehouses));
            
            // Get localized labels from Business Central
            Set(varLanguageResources, Filter('languageResources (businessCentralDemos/warehouseHelper/beta)', languageCode = "en-us"));
            Set(varLabels, {
                LoadingScreen_placeholder: LookUp(varLanguageResources, labelId = "LoadingScreen_placeholder").DisplayName,
                StartScreen_Scan: LookUp(varLanguageResources, labelId = "StartScreen_Scan").DisplayName,
                StartScreen_InfoPage: LookUp(varLanguageResources, labelId = "StartScreen_InfoPage").DisplayName,
                StartScreen_User: LookUp(varLanguageResources, labelId = "StartScreen_User").DisplayName,
                Close: LookUp(varLanguageResources, labelId = "Close").DisplayName,
                Back: LookUp(varLanguageResources, labelId = "Back").DisplayName,
                InfoScreen_Title: LookUp(varLanguageResources, labelId = "InfoScreen_Title").DisplayName,
                InfoScreen_Text: LookUp(varLanguageResources, labelId = "InfoScreen_Text").DisplayName,
                InfoScreen_ReadMore: LookUp(varLanguageResources, labelId = "InfoScreen_ReadMore").DisplayName, 
                InfoScreen_LinkToolTip: LookUp(varLanguageResources, labelId = "InfoScreen_LinkToolTip").DisplayName,
                InfoScreen_Link: LookUp(varLanguageResources, labelId = "InfoScreen_Link").DisplayName,    
                ItemScreen_Submit: LookUp(varLanguageResources, labelId = "ItemScreen_Submit").DisplayName,
                ItemScreen_Add: LookUp(varLanguageResources, labelId = "ItemScreen_Add").DisplayName,
                ItemScreen_SubStract: LookUp(varLanguageResources, labelId = "ItemScreen_SubStract").DisplayName,
                ItemScreen_SubStractBlocked: LookUp(varLanguageResources, labelId = "ItemScreen_SubStractBlocked").DisplayName,
                ItemScreen_InventoryToolTip: LookUp(varLanguageResources, labelId = "ItemScreen_InventoryToolTip").DisplayName,    
                SelectWarehouseScreen_Title: LookUp(varLanguageResources, labelId = "SelectWarehouseScreen_Title").DisplayName,    
                SelectWarehouseScreen_GalleryToolTip: LookUp(varLanguageResources, labelId = "SelectWarehouseScreen_GalleryToolTip").DisplayName,    
                SelectWarehouseScreen_GallerySelect: LookUp(varLanguageResources, labelId = "SelectWarehouseScreen_GallerySelect").DisplayName,    
                NotFoundScreen_Title: LookUp(varLanguageResources, labelId = "NotFoundScreen_Title").DisplayName,
                NotFoundScreen_Text: LookUp(varLanguageResources, labelId = "NotFoundScreen_Text").DisplayName,
                NotFoundScreen_Scan: LookUp(varLanguageResources, labelId = "NotFoundScreen_Scan").DisplayName,
                DebugScreen_Title: LookUp(varLanguageResources, labelId = "DebugScreen_Title").DisplayName,
                DebugScreen_LearnMore: LookUp(varLanguageResources, labelId = "DebugScreen_LearnMore").DisplayName, 
                DebugScreen_Gallery: LookUp(varLanguageResources, labelId = "DebugScreen_Gallery").DisplayName, 
                DebugScreen_DismissInfoMessage: LookUp(varLanguageResources, labelId = "DebugScreen_DismissInfoMessage").DisplayName, 
                DebugScreen_GallerySelect: LookUp(varLanguageResources, labelId = "DebugScreen_GallerySelect").DisplayName,     
                DebugScreen_Message: LookUp(varLanguageResources, labelId = "DebugScreen_Message").DisplayName    
            });
            
            // Load app state from local storage
            Set(varAppStateKey, "BCWarehouseAppStateKey");
            Set(varAppStateAvailable, true);
            
            // Check if local storage is available
            IfError(LoadData(colStoredAppState, varAppStateKey), 
                Set(varAppStateAvailable, false)
            );
            
            If(varAppStateAvailable, 
                With({
                    storedWarehouse: LookUp(varWarehouses, id = First(colStoredAppState).warehouseId)
                },
                    If(Not(IsBlankOrError(storedWarehouse)),
                        Set(varSelectedWarehouse, storedWarehouse);
                    );
                );
            );
            
            Navigate('Start Screen', ScreenTransition.Fade);
        OnTimerStart: =Select(Self);
        Start: =true
        Text: =
        Tooltip: =varLabels.LoadingScreen_placeholder
        Width: =Parent.Width
        ZIndex: =3

    imgLoadingSpinner As image:
        Fill: =
        Image: =Spinner_DarkBlue_2x
        X: =(Parent.Width- Self.Width)/2
        Y: =(Parent.Height - Self.Height)/2
        ZIndex: =4

